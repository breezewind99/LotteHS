<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="stat_period">

<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: INCLUDE ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

<!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  QUERY  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

	<!-- 월 통계 > 평가점수(차수가로) 이벤트코드 + 사용자ID + 차수 = 유일하다 selectListMonth -->
	<select id="selectListMonth" parameterType="map" resultType="lowerMap">
		/* 기간별 통계 - 월별  selectListMonth */
		select 
			max(AA.user_id) as user_id
			,max(AA.user_name) as user_name
			,bpart_code
			,AA.mpart_code
			,AA.spart_code
			,max(AA.bpart_name) as bpart_name
			,max(AA.mpart_name) as mpart_name
			,max(AA.spart_name) as spart_name
			,sum(AA.cnt1) as cnt1
			,sum(AA.sum1) as sum1
			,sum(AA.cnt2) as cnt2
			,sum(AA.sum2) as sum2
			,sum(AA.cnt3) as cnt3
			,sum(AA.sum3) as sum3
			,sum(AA.cnt4) as cnt4
			,sum(AA.sum4) as sum4
			,sum(AA.cnt5) as cnt5
			,sum(AA.sum5) as sum5
			,sum(AA.cnt6) as cnt6
			,sum(AA.sum6) as sum6
			,sum(AA.cnt7) as cnt7
			,sum(AA.sum7) as sum7
			,sum(AA.cnt8) as cnt8
			,sum(AA.sum8) as sum8
			,sum(AA.cnt9) as cnt9
			,sum(AA.sum9) as sum9
			,sum(AA.cnt10) as cnt10
			,sum(AA.sum10) as sum10
			,sum(AA.cnt11) as cnt11
			,sum(AA.sum11) as sum11
			,sum(AA.cnt12) as cnt12
			,sum(AA.sum12) as sum12
		from 
		(
			select 
				A.event_code
				,A.user_id
				,A.user_name
				,A.bpart_code
				,A.mpart_code
				,A.spart_code
				,A.bpart_name
				,A.mpart_name
				,A.spart_name
				,A.eval_order
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '01' then 1 
					else 0 end as cnt1
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '01' then A.exam_score + A.add_score 
					else 0 end as sum1
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '02' then 1 
					else 0 end as cnt2
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '02' then A.exam_score + A.add_score 
					else 0 end as sum2
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '03' then 1 
					else 0 end as cnt3
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '03' then A.exam_score + A.add_score 
					else 0 end as sum3
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '04' then 1 
					else 0 end as cnt4
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '04' then A.exam_score + A.add_score 
					else 0 end as sum4
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '05' then 1 
					else 0 end as cnt5
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '05' then A.exam_score + A.add_score 
					else 0 end as sum5
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '06' then 1 
					else 0 end as cnt6
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '06' then A.exam_score + A.add_score 
					else 0 end as sum6
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '07' then 1 
					else 0 end as cnt7
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '07' then A.exam_score + A.add_score 
					else 0 end as sum7
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '08' then 1 
					else 0 end as cnt8
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '08' then A.exam_score + A.add_score 
					else 0 end as sum8
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '09' then 1 
					else 0 end as cnt9
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '09' then A.exam_score + A.add_score 
					else 0 end as sum9
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '10' then 1 
					else 0 end as cnt10
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '10' then A.exam_score + A.add_score 
					else 0 end as sum10
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '11' then 1 
					else 0 end as cnt11
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '11' then A.exam_score + A.add_score 
					else 0 end as sum11
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '12' then 1 
					else 0 end as cnt12
				,case when to_char(A.upd_datm, 'yyyymm') = #{year_code} || '13' then A.exam_score + A.add_score 
					else 0 end as sum12
			from tbl_eval_event_result_list A
			where (select event_status from tbl_eval_event 
					where event_code = A.event_code) = '2'
			and eval_status = '9'
			<if test='year_code!=null and year_code!=""'>
			and to_char(upd_datm, 'yyyy') = #{year_code}
			</if>
			<if test='bpart_code!=null and bpart_code!=""'>
			and bpart_code = #{bpart_code}
			</if>
			<if test='mpart_code!=null and mpart_code!=""'>
			and mpart_code = #{mpart_code}
			</if>
			<if test='spart_code!=null and spart_code!=""'>
			and spart_code = #{spart_code}
			</if>
			<if test='eval_user_name!=null and eval_user_name!=""'>
			and eval_user_name like #{eval_user_name} || '%'
			</if>
			<if test='user_name!=null and user_name!=""'>
			and user_name like #{user_name} || '%'
			</if>
		) AA
		group by user_id, bpart_code , mpart_code, spart_code
		order by ${sort_idx} ${sort_dir}
	</select>

	<!-- 분기 통계 > 평가점수(차수가로) 이벤트코드 + 사용자ID + 차수 = 유일하다 selectListQuarter -->
	<select id="selectListQuarter" parameterType="map" resultType="lowerMap">
		/* 기간별 통계 - 분기별 selectListQuarter */
		select 
			max(AA.user_id) as user_id
			,max(AA.user_name) as user_name
			,bpart_code
			,AA.mpart_code
			,AA.spart_code
			,max(AA.bpart_name) as bpart_name
			,max(AA.mpart_name) as mpart_name
			,max(AA.spart_name) as spart_name
			,sum(cnt1) as cnt1
			,sum(sum1) as sum1
			,sum(cnt2) as cnt2
			,sum(sum2) as sum2
			,sum(cnt3) as cnt3
			,sum(sum3) as sum3
			,sum(cnt4) as cnt4
			,sum(sum4) as sum4
		from 
		(
			select 
				A.event_code
				,A.user_id
				,A.user_name
				,A.bpart_code
				,A.mpart_code
				,A.spart_code
				,A.bpart_name
				,A.mpart_name
				,A.spart_name
				,A.eval_order
				,case when to_char(upd_datm, 'yyyymm') = #{year_code} || '01'
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '02' 
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '03' then 1 
					else 0 end as cnt1
				,case when to_char(upd_datm, 'yyyymm') = #{year_code} || '01'
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '02' 
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '03' then A.exam_score + A.add_score 
					else 0 end as sum1
				,case when to_char(upd_datm, 'yyyymm') = #{year_code} || '04'
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '05' 
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '06' then 1 
					else 0 end as cnt2
				,case when to_char(upd_datm, 'yyyymm') = #{year_code} || '04'
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '05' 
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '06' then A.exam_score + A.add_score 
					else 0 end as sum2
				,case when to_char(upd_datm, 'yyyymm') = #{year_code} || '07'
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '08' 
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '09' then 1 
					else 0 end as cnt3
				,case when to_char(upd_datm, 'yyyymm') = #{year_code} || '07'
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '08' 
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '09' then A.exam_score + A.add_score 
					else 0 end as sum3
				,case when to_char(upd_datm, 'yyyymm') = #{year_code} || '10'
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '11' 
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '12' then 1 
					else 0 end as cnt4
				,case when to_char(upd_datm, 'yyyymm') = #{year_code} || '10'
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '11' 
						or to_char(upd_datm, 'yyyymm') = #{year_code} || '12' then A.exam_score + A.add_score 
					else 0 end as sum4
			from tbl_eval_event_result_list A 
			where (select event_status from tbl_eval_event 
					where event_code = A.event_code) = '2'
			and eval_status = '9'
			<if test='year_code!=null and year_code!=""'>
			and to_char(upd_datm, 'yyyy') = #{year_code}
			</if>
			<if test='bpart_code!=null and bpart_code!=""'>
			and bpart_code = #{bpart_code}
			</if>
			<if test='mpart_code!=null and mpart_code!=""'>
			and mpart_code = #{mpart_code}
			</if>
			<if test='spart_code!=null and spart_code!=""'>
			and spart_code = #{spart_code}
			</if>
			<if test='eval_user_name!=null and eval_user_name!=""'>
			and eval_user_name like #{eval_user_name} || '%'
			</if>
			<if test='user_name!=null and user_name!=""'>
			and user_name like #{user_name} || '%'
			</if>
		) AA
		group by user_id, bpart_code , mpart_code, spart_code
		order by ${sort_idx} ${sort_dir}
	</select>
	
	<!-- 상담원별 통계 > 평가항목 타이틀 구하기 getItem -->
	<select id="getItem" parameterType="map" resultType="lowerMap">
		/* 상담원별 통계 - 평가 항목 타이틀 getItem */
		select 
			B.*
			,A.item_name
		from tbl_eval_item A
		,(
			select 
				item_code
				,max(exam_score) as exam_score_max
				,max(add_score) as add_score_max
			from tbl_eval_sheet_item
			where sheet_code = #{sheet_code}
			group by item_code
		) B
		where A.item_code = B.item_code 
		and A.use_yn = 1
	</select>

</mapper>