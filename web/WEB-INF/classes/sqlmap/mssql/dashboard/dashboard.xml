<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dashboard">

<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: INCLUDE ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

<!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  QUERY  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

	<!-- 관제 서버목록 조회 -->
	<select id="selectMonSystem" parameterType="map" resultType="map">
		select *, (case mon_flag when '001' then 'critical' when '002' then 'warning' else 'normal' end) flag_desc
		from (
			select B.mon_system
				, (case when len(B.mon_system)>2
					then (
						case when right(B.mon_system,1)='1'
							then A.system_name + '_bak'
							else A.system_name
						end
					)
					else A.system_name
				  end) mon_name
				, B.mon_date, B.mon_time, B.mon_cpu, B.mon_mem, B.mon_hdd, B.mon_process
				, isnull(B.mon_rec, '000') mon_rec, isnull(B.mon_check, '000') mon_check
				, (case when B.mon_date is not null and B.mon_time is not null
					then cast((B.mon_date + ' ' + left(B.mon_time, 2) + ':' + substring(B.mon_time, 3, 2) + ':' + right(B.mon_time, 2)) as datetime)
					else '1900-01-01 00:00:00.000'
				  end) mon_datetime
				, (case when charindex(',2', ',' + B.mon_rec)>0 then '001'
					when charindex(',3', ',' + B.mon_check)>0 then '002'
					else '000'
				  end) mon_flag
				, datediff(ss,convert(datetime, stuff(stuff(cast(B.mon_date+B.mon_time as nchar(8)), 7, 0, '-'), 5, 0, '-') + N' ' 
							+ stuff(stuff(substring(cast(1000000 + right(B.mon_date+B.mon_time, 6) as nchar(7)), 2, 6), 5, 0, ':'), 3, 0, ':'), 120), 
							getdate()) as mon_delay
			from tbl_system A WITH(NOLOCK)
			inner join tbl_dash_monitoring B WITH(NOLOCK) on A.system_code=left(B.mon_system,2)
			where 1=1
			<if test='mon_system!=null and mon_system!=""'>
				and A.system_code=#{mon_system}
			</if>			
		) U
		order by mon_system asc
	</select>
	
	<!-- 실시간 모니터링 -->
	<select id="selectMonitoring" parameterType="map" resultType="map">
		select U.mon_system, U.mon_name, U.mon_date, U.mon_time, U.mon_cpu, U.mon_mem, U.mon_hdd, U.mon_process, U.mon_flag
			, (case C.code_flag when '001' then 'critical' when '002' then 'warning' else '' end) flag_desc
			, (isnull(C.code_descript,'') +
			<![CDATA[
				(case when U.flag_detail<>'' then ' (' + U.flag_detail + ')'
					 else ''
				end)) mon_alram
			]]>
		from (	
			select *
				, isnull(
					case when D.mon_flag in ('202','203','204','205') 
						 then (select mon_local_phone from tbl_dash_monlist WITH(NOLOCK) where mon_date=D.mon_date and mon_time=D.mon_rec_time and mon_alram=D.mon_flag)
						 when D.mon_flag='208'
						 then (select mon_ip + ', ' + mon_local_phone from tbl_dash_monlist WITH(NOLOCK) where mon_date=D.mon_date and mon_time=D.mon_rec_time and mon_alram=D.mon_flag)
						 when D.mon_flag='301'
						 then dbo.fn_GetProcessList(D.mon_process,',','X')
						 else ''
					end,'') flag_detail
			from (	
				select A.*, B.*, substring(A.mon_flags,B.start_idx,B.end_idx-B.start_idx) mon_flag
				from (
					select M.mon_system, M.mon_date, M.mon_time, M.mon_rec_time
						, isnull(M.mon_cpu,'0') mon_cpu, isnull(M.mon_mem,'0') mon_mem, isnull(M.mon_hdd,'') mon_hdd, isnull(M.mon_process,'') mon_process
						, (isnull(M.mon_rec,'') + ',' + isnull(M.mon_check,'')) mon_flags
						, (case when len(M.mon_system)>2
							then (
								case when right(M.mon_system,1)='1'
									then S.system_name + '_bak'
									else S.system_name
								end
							)
							else S.system_name
						  end) mon_name
					from tbl_dash_monitoring M WITH(NOLOCK) 
					inner join tbl_system S WITH(NOLOCK) on left(M.mon_system,2) = S.system_code
					where M.mon_date=convert(varchar(8),getdate(),112)
				) A CROSS APPLY (
					select number AS start_idx, charindex(',',A.mon_flags+',',number+1) AS end_idx
					from master.dbo.spt_values
					where number=charindex(',',','+A.mon_flags,number)
						and type='P'
				) B
			) D	
		) U left join tbl_dash_code C WITH(NOLOCK)
			on U.mon_flag=C.code and C.code_kind='Mon'
		where U.end_idx>U.start_idx
		<![CDATA[
			and U.mon_flag<>'000'
		]]>
		order by U.mon_date desc, U.mon_time desc, U.mon_flag asc
	</select>	
	
	<!-- 모니터링 로그 count -->
	<select id="selectLogCount" parameterType="map" resultType="map">
		select count(*) as tot_cnt, CEILING(CAST(COUNT(*) as float) / ${top_cnt}) as page_cnt
		from tbl_dash_monlist A  WITH(NOLOCK) 
		inner join tbl_system B WITH(NOLOCK) on left(A.mon_system,2)=B.system_code
		inner join tbl_dash_code C WITH(NOLOCK) on A.mon_alram=C.code and C.code_kind='Mon'
		where A.mon_date between #{log_date1} and #{log_date2}
		<if test='mon_system!=null and mon_system!=""'>
			and A.mon_system=#{mon_system}
		</if>			
		<if test='mon_alram!=null and mon_alram!=""'>
			and A.mon_alram=#{mon_alram}
		</if>	
	</select>
	
	<!-- 모니터링 로그 조회 -->
	<select id="selectLogList" parameterType="map" resultType="map">
		select (${tot_cnt}-rownum+1) idx
			, *
		from (
			select top ${end_cnt}
				ROW_NUMBER() OVER(order by A.mon_date desc, A.mon_time desc, A.mon_alram asc) as rownum
				, A.mon_system, A.mon_date, A.mon_time, A.mon_alram mon_flag
				, (case when len(A.mon_system)>2
					then (
						case when right(A.mon_system,1)='1'
							then B.system_name + '_bak'
							else B.system_name
						end
					)
					else B.system_name
				  end) mon_name
				, (case C.code_flag when '001' then 'critical' when '002' then 'warning' else '' end) flag_desc
				, (isnull(C.code_descript,'') +
					(case when A.mon_alram in ('202','203','204','205')
						then ' (' + A.mon_local_phone + ')'						
						when A.mon_alram='208'
						then ' (' + A.mon_local_phone + ', ' + A.mon_ip + ')'
						when A.mon_alram='301'
						then ' (' + dbo.fn_GetProcessList(A.mon_process,',','X') + ')'
						else ''
					end)) mon_alram
			from tbl_dash_monlist A WITH(NOLOCK)
			inner join tbl_system B WITH(NOLOCK) on left(A.mon_system,2)=B.system_code
			inner join tbl_dash_code C WITH(NOLOCK) on A.mon_alram=C.code and C.code_kind='Mon'
			where A.mon_date between #{log_date1} and #{log_date2}
			<if test='mon_system!=null and mon_system!=""'>
				and A.mon_system=#{mon_system}
			</if>			
			<if test='mon_alram!=null and mon_alram!=""'>
				and A.mon_alram=#{mon_alram}
			</if>
			order by A.mon_date desc, A.mon_time desc, A.mon_alram asc
		) U
		where rownum between ${start_cnt} and ${end_cnt}									
	</select>
	
	<!-- 모니터링 로그 전체 조회 (엑셀다운로드) -->
	<select id="selectLogListAll" parameterType="map" resultType="map">
		select
			<if test='top_cnt!=null and top_cnt!=""'>
			top ${top_cnt}
			</if>		 
			A.mon_system, A.mon_date, A.mon_time, A.mon_alram mon_flag
			, (case when len(A.mon_system)>2
				then (
					case when right(A.mon_system,1)='1'
						then B.system_name + '_bak'
						else B.system_name
					end
				)
				else B.system_name
			  end) mon_name
			, (case C.code_flag when '001' then 'critical' when '002' then 'warning' else '' end) flag_desc
			, (isnull(C.code_descript,'') +
				(case when A.mon_alram in ('202','203','204','205')
					then ' (' + A.mon_local_phone + ')'						
					when A.mon_alram='208'
					then ' (' + A.mon_local_phone + ', ' + A.mon_ip + ')'
					when A.mon_alram='301'
					then ' (' + dbo.fn_GetProcessList(A.mon_process,',','X') + ')'
					else ''
				end)) mon_alram
		from tbl_dash_monlist A WITH(NOLOCK)
		inner join tbl_system B WITH(NOLOCK) on left(A.mon_system,2)=B.system_code
		inner join tbl_dash_code C WITH(NOLOCK) on A.mon_alram=C.code and C.code_kind='Mon'
		where A.mon_date between #{log_date1} and #{log_date2}
		<if test='mon_system!=null and mon_system!=""'>
			and A.mon_system=#{mon_system}
		</if>			
		<if test='mon_alram!=null and mon_alram!=""'>
			and A.mon_alram=#{mon_alram}
		</if>
		order by A.mon_date desc, A.mon_time desc, A.mon_alram asc
	</select>	
	
	<!-- 모니터링 코드 목록 조회 -->
	<select id="selectCodeList" parameterType="map" resultType="map">
		select code, code_descript, code_flag
		from tbl_dash_code WITH(NOLOCK)
		where code_kind='Mon'
		order by code asc	
	</select>
	
	<!-- 모니터링 채널 상태별 건수 -->
	<select id="selectRecStateCount" parameterType="map" resultType="map">
		/* 모니터링 채널 상태별 건수 */
		select
			isnull(sum(case when a.ch_state = 'RS' then cnt end),0) as rs_cnt
			,isnull(sum(case when a.ch_state = 'RP' then cnt end),0) as rp_cnt
		  	,isnull(sum(case when a.ch_state = 'OW' then cnt end),0) as ow_cnt
		  	,isnull(sum(case when a.ch_state = 'TP' then cnt end),0) as tp_cnt
		  	,isnull(sum(case when a.ch_state = 'RL' then cnt end),0) as rl_cnt
		  	,isnull(sum(case when a.ch_state = 'RW' then cnt end),0) as rw_cnt
		from (
			select
		    	aa.ch_state
		    	,count(aa.ch_state) as cnt
			from (
				select
			    <![CDATA[
					(case when cm.state = '1' and cm.rec_state = '0' then 'RS'
						when cm.state = '1' and cm.rec_state = '1' then 'RP'
			            when cm.state = '1' and cm.rec_state = '2' then 'OW'
			            when cm.state = '1' and cm.rec_state = '3' then 'OW'
			            when cm.state = '1' and cm.rec_state = '4' then 'TP'
			            when cm.state = '0' and cm.datetime < dateadd(day, -1, getdate()) then 'RL'
			            when cm.state = '0' and cm.datetime > dateadd(day, -1, getdate()) then 'RW'
			        else  '' end) as ch_state
				]]>
			    from crec_monitoring cm WITH(NOLOCK)
			    inner join tbl_system ts WITH(NOLOCK) on cm.system_code = ts.system_code
			) aa
			group by aa.ch_state
		) a
	</select>
	
	<!-- 모니터링 채널 조회 -->
	<select id="selectChannelList" parameterType="map" resultType="map">
		/* 모니터링 채널 조회 */
		select
		  cm.state
		  ,replicate('0', 5 - LEN(cm.channel))+cm.channel as channel
		  ,cm.system_code 
		  ,cm.login 
		  ,cm.user_id 
		  ,cm.user_name 
		  ,cm.ani 
		  ,replicate('0', 4 - LEN(cm.phone))+cm.phone as phone 
		  ,cm.datetime 
		  ,ts.system_ip
		  ,cm.rec_state
		  <![CDATA[
		  ,(case when cm.state = '1' and cm.rec_state = '0' then 'RS'  --녹음중
				 when cm.state = '1' and cm.rec_state = '1' then 'RP'  --RTP누락
				 when cm.state = '1' and cm.rec_state = '2' then 'IW'  --onway
				 when cm.state = '1' and cm.rec_state = '3' then 'IW'  --onway
				 when cm.state = '1' and cm.rec_state = '4' then 'TP'  --전화기 IP 비매칭
				 when cm.state = '0' and cm.datetime < dateadd(day, -1, getdate()) then 'RL'  --장시간 미녹취
				 when cm.state = '0' and cm.datetime > dateadd(day, -1, getdate()) then 'RW'  --대기중
			else  '' end) as ch_state
		   ]]>
		from crec_monitoring cm WITH(NOLOCK)
		inner join tbl_system ts WITH(NOLOCK) on cm.system_code = ts.system_code
		order by cast(cm.channel as int) asc
	</select>
	
<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: UPDATE :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->	
	
	<!-- 모니터링 reset 업데이트 -->
	<update id="updateReset" parameterType="map">
		/* 모니터링 reset 업데이트 */
		update tbl_dash_monitoring 
			set mon_rec_time = null
				,mon_rec = '000'
				,mon_check = '000'
				,mon_flag = '000' 
		where mon_system is not null
	</update>
	
</mapper>