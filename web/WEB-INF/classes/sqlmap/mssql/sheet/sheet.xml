<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sheet">

<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: INCLUDE ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

<!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  QUERY  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

	<!-- 시트코드 목록 조회 selectCodeList -->
	<select id="selectCodeList" parameterType="map" resultType="map">
		/* 시트코드 목록 조회 selectCodeList */
		select 
			sheet_code
			,sheet_name
		from tbl_eval_sheet WITH(NOLOCK)
		where 1=1
		<if test='use_yn!=null and use_yn!=""'>
			and use_yn = #{use_yn}
		</if>
		order by sheet_code asc
	</select>
	
	<!-- 시트 조회 selectItem -->
	<select id="selectItem" parameterType="string" resultType="map">
		/* 시트 조회 selectItem */
		select 
			sheet_code
			,sheet_name
			,item_cnt
			,tot_score
			,add_score
			,sheet_etc
			,use_yn
			,convert(varchar(19), regi_datm, 121) as regi_datm
		from tbl_eval_sheet WITH(NOLOCK)
		where sheet_code = #{sheet_code}
	</select>
	
	<!-- 시트 count selectCount -->
	<select id="selectCount" parameterType="map" resultType="map">
		/* 시트 count selectCount */
		select 
			count(*) as tot_cnt
			,CEILING(CAST(COUNT(*) as float) / ${top_cnt}) as page_cnt
		from tbl_eval_sheet WITH(NOLOCK)
		where 1=1
		<if test='regi_date1!=null and regi_date1!="" and regi_date2!=null and regi_date2!=""'>
			and regi_datm between convert(datetime, #{regi_date1} + ' 00:00:00.000') and convert(datetime, #{regi_date2} + ' 23:59:59.997')
		</if>
		<if test='sheet_code!=null and sheet_code!=""'>
			and sheet_code = #{sheet_code}
		</if>
		<if test='sheet_name!=null and sheet_name!=""'>
			and sheet_name like #{sheet_name} + '%'
		</if>
	</select>
	
	<!-- 시트 조회 selectList -->
	<select id="selectList" parameterType="map" resultType="map">
		/* 시트 조회 selectList */
		select (${tot_cnt}-rownum+1) idx, *
		from (
			select top ${end_cnt}
				ROW_NUMBER() OVER(order by ${sort_idx} ${sort_dir}) as rownum
				,sheet_code
				,sheet_name
				,item_cnt
				,tot_score
				,add_score
				,sheet_etc
				,use_yn
				,convert(varchar(19), regi_datm, 121) as regi_datm
			from tbl_eval_sheet WITH(NOLOCK)
			where 1=1
			<if test='regi_date1!=null and regi_date1!="" and regi_date2!=null and regi_date2!=""'>
				and regi_datm between convert(datetime, #{regi_date1} + ' 00:00:00.000') and convert(datetime, #{regi_date2} + ' 23:59:59.997')
			</if>
			<if test='sheet_code!=null and sheet_code!=""'>
				and sheet_code = #{sheet_code}
			</if>
			<if test='sheet_name!=null and sheet_name!=""'>
				and sheet_name like #{sheet_name} + '%'
			</if>
			order by ${sort_idx} ${sort_dir}
		) U
		where rownum between ${start_cnt} and ${end_cnt}
	</select>
	
	<!-- 시트 총 배점, 총 가산점 조회 selectTotAddScore -->
	<select id="selectTotAddScore" parameterType="string" resultType="map">
		/* 시트 총 배점 총 가산점 조회 selectTotAddScore */
		select 
			sum(exam_score) as tot_score
			,sum(add_score) as add_score
		from (
			select 
				item_code
				,max(exam_score) as exam_score
				,sum(add_score) as add_score
			from tbl_eval_sheet_item WITH(NOLOCK)
			where sheet_code = #{sheet_code}
			group by item_code
		) U
	</select>

	<!-- 시트 보기 sheetView -->
	<select id="sheetView" parameterType="string" resultType="map">
		/* 시트 보기 sheetView */
		select 
			S.sheet_name
			,(left(A.cate_code,2)+'00') as cate_pcode
			,A.cate_code
			,A.item_code
			,A.exam_code
			,A.exam_score
			,A.add_score
			,A.default_yn
			,(select cate_name from tbl_eval_cate WITH(NOLOCK) 
				where cate_code = left(A.cate_code,2)+'00' 
				and cate_depth = 1) as cate_pname
			,D.cate_name as cate_name
			,C.item_name as item_name
			,B.item_name as exam_name
		from tbl_eval_sheet S WITH(NOLOCK)
		inner join tbl_eval_sheet_item A WITH(NOLOCK) on S.sheet_code = A.sheet_code
		inner join tbl_eval_item B WITH(NOLOCK) on A.exam_code = B.item_code 
												and A.cate_code = B.cate_code 
												and B.item_depth = 2
		inner join tbl_eval_item C WITH(NOLOCK) on A.item_code = C.item_code 
												and A.cate_code = C.cate_code 
												and C.item_depth = 1
		inner join tbl_eval_cate D WITH(NOLOCK) on A.cate_code = D.cate_code 
												and D.cate_depth = 2
		where S.sheet_code = #{sheet_code}
		order by A.cate_code, convert(int, A.item_code), convert(int, A.exam_code)
	</select>
	
<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: INSERT :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->	

	<!-- 시트 등록 insertSheet -->
	<insert id="insertSheet" parameterType="map">
		/* 시트 등록 insertSheet */
		<selectKey resultType="string" keyProperty="sheet_code" order="BEFORE">
			select 
				replicate('0',4-len(sheet_code)) + cast(sheet_code as varchar) sheet_code
			from (
				select (isnull(max(cast(sheet_code as int)),0)+1) sheet_code
				from tbl_eval_sheet WITH(NOLOCK)
			) U
		</selectKey>
		insert into tbl_eval_sheet 
		(
			sheet_code, sheet_name, item_cnt, tot_score, add_score, sheet_etc, use_yn, regi_datm, regi_ip, regi_id
		)
		values 
		(
			#{sheet_code}, #{sheet_name}, #{item_cnt}, #{tot_score}, #{add_score}, #{sheet_etc}, #{use_yn}, getdate(), #{regi_ip}, #{regi_id}
		)
	</insert>

	<!-- 시트 복사 copySheet_sheet -->
	<insert id="copySheet_sheet" parameterType="map">
		/* 시트 복사 copySheet_sheet */
		<selectKey resultType="string" keyProperty="sheet_code_insert" order="BEFORE">
			select replicate('0',4-len(sheet_code)) + cast(sheet_code as varchar) sheet_code_insert
			from (
				select (isnull(max(cast(sheet_code as int)),0)+1) sheet_code
				from tbl_eval_sheet WITH(NOLOCK)
			) U
		</selectKey>
		insert into tbl_eval_sheet 
		(
			sheet_code, sheet_name, item_cnt, tot_score, add_score, sheet_etc, use_yn, regi_datm, regi_ip, regi_id
		)
		select 
			#{sheet_code_insert}
			, sheet_name+' 복사본', item_cnt, tot_score, add_score, sheet_etc, use_yn, getdate(), regi_ip, regi_id
		from tbl_eval_sheet WITH(NOLOCK)
		where sheet_code = #{sheet_code}
	</insert>

	<!-- 시트 복사.항목 copySheet_item -->
	<insert id="copySheet_item" parameterType="map">
		/* 시트 복사 항목 copySheet_item */
		insert into tbl_eval_sheet_item 
		(
			sheet_code, cate_code, item_code, exam_code, exam_score, add_score, default_yn
		)
		select 
			#{sheet_code_insert}
			,cate_code
			,item_code
			,exam_code
			,exam_score
			,add_score
			,default_yn
		from tbl_eval_sheet_item WITH(NOLOCK)
		where sheet_code = #{sheet_code}
	</insert>

	<!-- 시트 항목 등록 insertSheetItem -->
	<insert id="insertSheetItem" parameterType="map">
		/* 시트 항목 등록 insertSheetItem */
		insert into tbl_eval_sheet_item 
		(
			sheet_code,cate_code,item_code,exam_code,exam_score,add_score,default_yn
		) 
		values 
		(
			#{sheet_code},#{cate_code},#{item_code},#{exam_code},#{exam_score},#{add_score},#{default_yn}
		)
	</insert>
	
<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: UPDATE :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->	

	<!-- 시트 수정 updateSheet -->
	<update id="updateSheet" parameterType="map">
		/* 시트 수정 updateSheet */
		update tbl_eval_sheet
		<set>
			<if test='sheet_name!=null and sheet_name!=""'>sheet_name = #{sheet_name},</if>
			<if test='sheet_etc!=null'>sheet_etc = #{sheet_etc},</if>
			<if test='tot_score!=null and tot_score!=""'>tot_score = #{tot_score},</if>
			<if test='add_score!=null and add_score!=""'>add_score = #{add_score},</if>
			<if test='use_yn!=null and use_yn!=""'>use_yn = #{use_yn},</if>
		</set>
			,upd_datm = getdate()
			,upd_ip = #{upd_ip}
			,upd_id = #{upd_id}
		where sheet_code = #{sheet_code}
	</update>
	
<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: DELETE :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->	
	
	<!-- 시트 삭제 (이벤트에 등록된 시트가 아닌 경우만 삭제됨) deleteSheet -->
	<delete id="deleteSheet" parameterType="string">
		/* 시트 삭제 deleteSheet */ 
		delete from tbl_eval_sheet
		where sheet_code = #{sheet_code} 
		and (
			select top 1 event_code from tbl_eval_event A WITH(NOLOCK)
			where A.sheet_code = tbl_eval_sheet.sheet_code
		) is null
	</delete>
	
	<!-- 시트 삭제 (이벤트에 등록된 시트가 아닌 경우만 삭제됨)  deleteSheetItem -->
	<delete id="deleteSheetItem" parameterType="string">
		/* 시트 삭제  deleteSheetItem */
		delete from tbl_eval_sheet_item
		where sheet_code = #{sheet_code}
	</delete>

</mapper>