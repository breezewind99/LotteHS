<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="channel">

<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: INCLUDE ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

<!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  QUERY  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

	<!-- 내선번호, 아이피 중복체크 selectDuplicateCheck -->
	<select id="selectDuplicateCheck" parameterType="map" resultType="string">
		/* 내선번호, 아이피 중복체크 selectDuplicateCheck */
		<![CDATA[
		select 
			case when sum(dup_num_cnt)>0 and sum(dup_ip_cnt)>0 then 'DUP_PHONE_NUM_IP'
				 when sum(dup_num_cnt)>0 and sum(dup_ip_cnt)<1 then 'DUP_PHONE_NUM'
				 when sum(dup_num_cnt)<1 and sum(dup_ip_cnt)>0 then 'DUP_PHONE_IP'
				else 'OK' end as result_code
		from 
		(
			select 
				count(*) as dup_num_cnt
				,0 as dup_ip_cnt
			from crec_ip_info WITH(NOLOCK)
			where phone_num = #{phone_num} 
			and phone_num != #{ori_phone_num}
			union all
			select 
				0 as dup_num_cnt
				,count(*) as dup_ip_cnt
			from crec_ip_info WITH(NOLOCK)
			where phone_num != #{ori_phone_num} 
			and phone_ip=#{phone_ip}
		) U
		]]>
	</select>
	
	<!-- 시스템별 사용 가능한 최소 채널번호 조회 selectUsableMinChannel -->
	<select id="selectUsableMinChannel" parameterType="string" resultType="string">
		/* 시스템별 사용 가능한 최소 채널번호 조회 selectUsableMinChannel */
		select 
			min(A.channel) channel
		from 
		(
			select 
				(replicate('0',3-len(number)) + convert(varchar, number)) as channel
			from master..spt_values WITH(NOLOCK)
			where type = 'P' 
			and number between 1 and (select license_cnt from tbl_system WITH(NOLOCK) 
										where system_code = #{system_code})
		) A 
		left join crec_ip_info B WITH(NOLOCK) on A.channel = B.channel 
												and B.system_code = #{system_code}
		where B.phone_num is null
	</select>
	
	<!-- 시스템별 사용 가능한 채널 목록 조회 selectUsableChannelList -->
	<select id="selectUsableChannelList" parameterType="string" resultType="map">
		/* 시스템별 사용 가능한 채널 목록 조회 selectUsableChannelList */
		select 
			A.channel
		from 
		(
			select 
				(replicate('0',3-len(number)) + convert(varchar, number)) as channel
			from master..spt_values WITH(NOLOCK)
			where type = 'P' 
			and number between 1 and (select license_cnt from tbl_system WITH(NOLOCK) 
										where system_code = #{system_code})
		) A 
		left join crec_ip_info B WITH(NOLOCK) on A.channel = B.channel 
												and B.system_code = #{system_code}
		where B.phone_num is null
		order by A.channel asc
	</select>
	
	<!-- 채널 목록 selectList -->
	<select id="selectList" parameterType="map" resultType="map">
		/* 채널 목록 selectList */
		select 
			A.system_code
			,A.channel
			,isnull(B.phone_num,'') as phone_num
			,isnull(B.phone_num,'') as ori_phone_num
			,isnull(B.phone_ip,'') as phone_ip
			,isnull(B.mac,'') as mac
			,isnull(B.tn_num,'') as tn_num
			,isnull(B.backup_code,'') as backup_code
			,isnull(B.backup_code,'') as ori_backup_code
			,isnull(C.system_name,'') as system_name
			,isnull(D.system_name,'') as backup_name
			,(case when B.phone_num is null then 'I' 
				else 'U' end) as act_type
		from 
		(
			select 
				#{system_code} as system_code
				,(replicate('0',3-len(number)) + convert(varchar, number)) as channel
			from master..spt_values WITH(NOLOCK)
			where type = 'P' 
			and number between 1 and (select license_cnt from tbl_system WITH(NOLOCK) 
										where system_code = #{system_code})
		) A 
		left join crec_ip_info B WITH(NOLOCK) on A.system_code = B.system_code 
												and A.channel = B.channel 
												and B.system_code = #{system_code}
		left join tbl_system C WITH(NOLOCK) on B.system_code = C.system_code 
												and C.system_code = #{system_code}
		left join tbl_system D WITH(NOLOCK) on B.backup_code = D.system_code
		where 1=1
		order by ${sort_idx} ${sort_dir}
	</select>
	
	<!-- 채널 검색 목록 selectSearchList -->
	<select id="selectSearchList" parameterType="map" resultType="map">
		/* 채널 검색 목록 selectSearchList */
		select 
			A.system_code
			,A.channel
			,A.phone_num
			,A.phone_num as ori_phone_num
			,A.phone_ip
			,A.mac
			,A.tn_num
			,isnull(A.backup_code,'') as backup_code
			,isnull(A.backup_code,'') as ori_backup_code
			,B.system_name
			,C.system_name as backup_name
			,'U' as act_type
		from crec_ip_info A WITH(NOLOCK) 
		inner join tbl_system B WITH(NOLOCK) on A.system_code = B.system_code
		left join tbl_system C WITH(NOLOCK) on A.backup_code = C.system_code
		where 1=1
		<if test='phone_num!=null and phone_num!=""'>
			and A.phone_num = #{phone_num}
		</if>
		<if test='phone_ip!=null and phone_ip!=""'>
			and A.phone_ip = #{phone_ip}
		</if>
		order by ${sort_idx} ${sort_dir}
	</select>
	
	<!-- 채널정보 조회 (내선번호) selectItemByPhoneNum -->
	<select id="selectItemByPhoneNum" parameterType="string" resultType="map">
		/* 채널정보 조회 selectItemByPhoneNum */
		select top 1 
			A.phone_num
		 	,A.phone_ip
		 	,A.channel
		 	,A.system_code
			,B.system_ip
			,isnull(B.backup_ip,'') as backup_ip
		from crec_ip_info A WITH(NOLOCK)
		inner join tbl_system B WITH(NOLOCK) on A.system_code = B.system_code
		where A.phone_num = #{phone_num}
	</select>
	
<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: INSERT :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

	<!-- 채널 등록 insertChannel -->
	<insert id="insertChannel" parameterType="map">
		/* 채널 등록 insertChannel */
		insert into crec_ip_info 
		(
			phone_num,phone_ip,channel,system_code,mac,tn_num,backup_code
		) 
		values 
		(
			#{phone_num},#{phone_ip},#{channel},#{system_code},#{mac},#{tn_num},#{backup_code}
		)
	</insert>

<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: UPDATE :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

	<!-- 채널 업데이트 updateChannel -->
	<update id="updateChannel" parameterType="map">
		/* 채널 업데이트 updateChannel */
		update crec_ip_info
		<set>
			<if test='phone_num!=null and phone_num!=""'>phone_num = #{phone_num},</if>
			<if test='phone_ip!=null and phone_ip!=""'>phone_ip =  #{phone_ip},</if>
			<if test='channel!=null and channel!=""'>channel = #{channel},</if>
			mac = #{mac}
			,tn_num = #{tn_num}
			,backup_code = #{backup_code}
		</set>
		where phone_num = #{ori_phone_num}
	</update>
	
<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: DELETE :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->	

	<!-- 채널 삭제 deleteChannel -->
	<delete id="deleteChannel" parameterType="string">
		/* 채널 삭제 deleteChannel */
		delete from crec_ip_info 
		where phone_num = #{phone_num}
	</delete>

</mapper>