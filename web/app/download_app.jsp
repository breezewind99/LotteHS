<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ include file="/common/common.jsp" %>
<%@ include file="/common/function.jsp" %>
<%@ page import="java.net.URL"%>
<%@ page import="java.net.HttpURLConnection"%>
<%@ page import="java.io.*"%>
<%@page import="java.net.URLDecoder"%>
<%
	//if(!Site.isPmss(out,"rec_search","")) return;

	Db db = null;

	HttpURLConnection httpconn = null;
	InputStream in = null;
	ByteArrayOutputStream baos = null;
	BufferedReader rd = null;
	BufferedOutputStream os = null;
	
	request.setCharacterEncoding("UTF-8");

	 
	try 
	{
		db = new Db(true);

		// get parameter
		String rec_date = CommonUtil.getParameter("date");
		String rec_keycode = CommonUtil.getParameter("keycode");
		String local_no = CommonUtil.getParameter("local");
		//String file_name = CommonUtil.getParameter("filename");
		//String file_name = URLDecoder.decode(CommonUtil.getParameter("filename"));
		
		String file_name = CommonUtil.getEncodeString(CommonUtil.getParameter("filename"));
				
				//.decode(CommonUtil.getParameter("filename"),"UTF-8"));
		String login_id = CommonUtil.getParameter("id","APP");
		/*
		logger.info("file_name : "+file_name);
		logger.info(CommonUtil.getEncodeString(CommonUtil.getParameter("filename")));
		logger.info(URLDecoder.decode(CommonUtil.getParameter("filename"), "UTF-8"));		
		logger.info(URLDecoder.decode(CommonUtil.getParameter("filename"), "EUC-KR"));		
		logger.info(URLDecoder.decode(CommonUtil.getParameter("filename"), "8859_1"));				
		*/
		//getEncodeString
		
		String user_ip = request.getRemoteAddr();

		// 파라미터 체크
		if(!CommonUtil.hasText(rec_date) || !CommonUtil.hasText(rec_keycode) || !CommonUtil.hasText(local_no))
		{
			out.print(CommonUtil.getPopupMsg(CommonUtil.getErrorMsg("NO_PARAM"),"",""));
			return;
		}
		
		Map<String, Object> argMap = new HashMap<String, Object>();
		argMap.put("rec_date",rec_date);
		argMap.put("rec_keycode",rec_keycode);
     	argMap.put("local_no",local_no);
     	
		// 녹취이력 조회
		Map<String, Object> data  = db.selectOne("rec_search.selectItem", argMap);
		if(data == null) 
		{
			out.print(CommonUtil.getPopupMsg(CommonUtil.getErrorMsg("NO_DATA"),"",""));
			return;
		}

		// 녹취파일 경로 조회
		String file_url = getListenURL5("DOWN", data, logger);

		if(file_url == null || "".equals(file_url)) 
		{
			out.print(CommonUtil.getPopupMsg("녹취파일 경로를 가져 오는데 실패했습니다.","",""));
			return;
		}

		if("ERR".equals(file_url.substring(0,3))) 
		{
			out.print(CommonUtil.getPopupMsg(file_url.substring(3),"",""));
			return;
		}

		// http 통신 관련 변수 선언
		URL url = null;

		// 루키스, 나이스 데이터인 경우 파형 확장자를 가진 URL로 2번 http 통신이 필요함
		String system_code = data.get("system_code").toString();
		
		//String file_name = data.get("rec_filename").toString();
		file_name = file_name+".wav";
		String fft_url = "";
		if("88".equals(system_code)) 
		{
			fft_url = file_url.replace(".wav", ".nmf");
		} 
		else 
		{
			fft_url = file_url.replace(".wav", ".fft");
		}
		
		// 녹취파형 HTTP 연결
		url = new URL(fft_url);
		httpconn = (HttpURLConnection) url.openConnection();
		httpconn.setConnectTimeout(10000);

		if(httpconn.getResponseCode() != HttpURLConnection.HTTP_OK) 
		{
			out.print(CommonUtil.getPopupMsg("녹취파일이 존재하지 않습니다.","",""));
			return;
		}

		// 녹취파일 HTTP 연결
		url = new URL(file_url);

		httpconn = (HttpURLConnection) url.openConnection();
		httpconn.setConnectTimeout(10000);
		//timeout으로 인한 주석 처리
		//httpconn.setReadTimeout(60000);

		if(httpconn.getResponseCode()!=HttpURLConnection.HTTP_OK) 
		{
			out.print(CommonUtil.getPopupMsg("녹취파일이 존재하지 않습니다.","",""));
			return;
		}

		String contentType = httpconn.getContentType();
		int contentLength = httpconn.getContentLength();

		in = httpconn.getInputStream();
		baos = new ByteArrayOutputStream();

		// 미디어 서버 연동 결과 저장
		byte[] buffer = new byte[4096];
		int leng = 0;
		while((leng=in.read(buffer)) != -1) 
		{
			baos.write(buffer, 0, leng);
		}
		baos.flush();

		// 미디어 서버 오류 체크
		rd = new BufferedReader(new InputStreamReader(new ByteArrayInputStream(baos.toByteArray())));
		
		if("<H2>".equals(rd.readLine().substring(0,4))) 
		{
			out.print(CommonUtil.getPopupMsg("미디어서버 오류가 발생하였습니다.","",""));
			return;
		}

		response.reset();
		response.setContentType(contentType);
		response.setHeader("Content-Description","Generated By CREC");
		response.setHeader("Content-Disposition","attachment; filename = " + new String(file_name.replace(".nmf", ".wav").getBytes("UTF-8"),"8859_1"));
		response.setHeader("Content-Length",""+contentLength);
		response.setHeader("Pragma","no-cache");
		//response.setHeader("Pragma","public");
		response.setHeader("Expires","0");
		response.setHeader("Cache-Control","max-age=0");

		out.clear();
		out = pageContext.pushBody();

		// file write
		os = new BufferedOutputStream(response.getOutputStream());
		os.write(baos.toByteArray());

		// resource close
		os.close();
		rd.close();
		baos.close();
		in.close();
		httpconn.disconnect();

		// 다운로드 이력 저장
		argMap.put("rec_datm",data.get("rec_datm").toString());
		argMap.put("local_no",data.get("local_no").toString());
		argMap.put("rec_filename",data.get("rec_filename").toString());
		argMap.put("login_id",login_id);
		argMap.put("login_name",login_id);
		argMap.put("down_ip",user_ip);
		argMap.put("rec_keycode",data.get("rec_keycode").toString());
		argMap.put("user_id",data.get("user_id").toString());
		argMap.put("user_name",data.get("user_name").toString());
		argMap.put("reason_code","");
		argMap.put("reason_text","");
		argMap.put("down_src","AP");

		int ins_cnt = db.insert("hist_down.insertDownHist", argMap);
	} 
	catch(Exception e) 
	{
		out.print(CommonUtil.getPopupMsg(e.getMessage(),"",""));
		logger.error(e.getMessage());
	} 
	finally 
	{
		if(httpconn != null)	httpconn.disconnect();
		if(in != null)	in.close();
		if(baos != null) baos.close();
		if(rd != null)	rd.close();
		if(os != null)	os.close();
		if(db != null)	db.close();
	}
%>