<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">

<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: INCLUDE ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

<!-- ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  QUERY  ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

	<!-- 단일 사용자 조회 selectItem -->
	<select id="selectItem" parameterType="string" resultType="map">
		/* 단일 사용자 조회 selectItem */
		select 
			user_id
			,'' as user_pass
			,user_name
			,local_no
			,channel_no
			,use_yn
			,system_code
			,coalesce((select system_name from tbl_system 
						where system_code = tbl_user.system_code), '') as system_name
			,user_level
			,user_level as origin_level
			,fn_GetCodeName('USER_LEVEL', user_level) as user_level_desc
			,pass_chg_term
			,(case pass_chg_term when 0 then '제한없음' 
				else pass_chg_term::varchar || '일' end) as pass_chg_term_desc
			,pass_expire_date
			,pass_upd_date
			,coalesce(user_ip, '') as user_ip
			,lock_yn
			,to_char(lock_datm, 'YYYY-MM-DD HH24:MI:SS') as lock_datm
			,resign_yn
			,(case resign_yn when '1' then '퇴사' 
				else '재직' end) as resign_yn_desc
			,to_char(resign_datm, 'YYYY-MM-DD HH24:MI:SS') as resign_datm
			,to_char(regi_datm, 'YYYY-MM-DD HH24:MI:SS') as regi_datm
		from tbl_user
		where user_id = #{user_id}
	</select>

	<!-- 평가자 콤보박스 목록 조회 selectEvalListCombo -->
	<select id="selectEvalListCombo" parameterType="map" resultType="map">
		/* 평가자 콤보박스 목록 조회 selectEvalListCombo */
		select 
			user_id
			,user_name
		from tbl_user
		where eval_yn ='y' 
		and resign_yn = '0' 
		and use_yn = '1'
		<if test='business_code!=null and business_code!=""'>
		and business_code = #{business_code}
		</if>
		<!-- 관리자/시스템관리자만 모든 평가자 볼 수 있음 -->
		<!-- if test='_user_level!=null and _user_level!="" and _user_level>="B"' -->
		<if test='_user_level!=null and _user_level!=""'>
		and user_id = #{_user_id}
		</if>
		order by user_name asc
	</select>

	<!-- 사용자 count selectCount -->
	<select id="selectCount" parameterType="map" resultType="map">
		/* 사용자 count selectCount */
		select
			count(*)::int as tot_cnt
			,ceil(count(*) / ${top_cnt}::float) as page_cnt
		from tbl_user
		where 1=1
		<if test='business_code!=null and business_code!=""'>
		and business_code = #{business_code}
		</if>
		<if test='bpart_code!=null and bpart_code!=""'>
		and bpart_code = #{bpart_code}
		</if>
		<if test='mpart_code!=null and mpart_code!=""'>
		and mpart_code = #{mpart_code}
		</if>
		<if test='spart_code!=null and spart_code!=""'>
		and spart_code = #{spart_code}
		</if>
		<if test='user_id!=null and user_id!=""'>
		and user_id like #{user_id} || '%'
		</if>
		<if test='user_name!=null and user_name!=""'>
		and user_name like #{user_name} || '%'
		</if>
		<if test='local_no!=null and local_no!=""'>
		and local_no like #{local_no} || '%'
		</if>
	</select>

	<!-- 사용자 조회 selectList -->
	<select id="selectList" parameterType="map" resultType="map">
		/* 사용자 조회 selectList */
		select (${tot_cnt}-rownum+1) idx, *
		from (
			select
				ROW_NUMBER() OVER(order by ${sort_idx} ${sort_dir}) as rownum
				,user_id
				,'' as user_pass
				,user_name
				,local_no
				,channel_no
				,use_yn
				,system_code
				,coalesce((select system_name from tbl_system 
							where system_code = tbl_user.system_code), '') as system_name
				,user_level
				,user_level as origin_level 
				,fn_GetCodeName('USER_LEVEL', user_level) as user_level_desc
				,pass_chg_term
				,(case pass_chg_term when 0 then '제한없음' 
					else pass_chg_term::varchar || '일' end) as pass_chg_term_desc
				,pass_expire_date
				,pass_upd_date
				,coalesce(user_ip, '') as user_ip
				,lock_yn
				,to_char(lock_datm, 'YYYY-MM-DD HH24:MI:SS') as lock_datm
				,resign_yn
				,(case resign_yn when '1' then '퇴사' 
					else '재직' end) as resign_yn_desc
				,to_char(resign_datm, 'YYYY-MM-DD HH24:MI:SS') as resign_datm
				,to_char(regi_datm, 'YYYY-MM-DD HH24:MI:SS') as regi_datm
				,eval_yn
				,business_code
				,bpart_code
				,mpart_code
				,spart_code
				,(select business_name from tbl_business 
					where business_code = tbl_user.business_code) as business_name
				,rec_down_yn
			from tbl_user
			where 1=1
			<if test='business_code!=null and business_code!=""'>
			and business_code = #{business_code}
			</if>
			<if test='bpart_code!=null and bpart_code!=""'>
			and bpart_code = #{bpart_code}
			</if>
			<if test='mpart_code!=null and mpart_code!=""'>
			and mpart_code = #{mpart_code}
			</if>
			<if test='spart_code!=null and spart_code!=""'>
			and spart_code = #{spart_code}
			</if>
			<if test='user_id!=null and user_id!=""'>
			and user_id like #{user_id} || '%'
			</if>
			<if test='user_name!=null and user_name!=""'>
			and user_name like #{user_name} || '%'
			</if>
			<if test='local_no!=null and local_no!=""'>
			and local_no like #{local_no} || '%'
			</if>
			order by ${sort_idx} ${sort_dir}
			limit ${top_cnt} offset (${start_cnt}-1)
		) U
	</select>
	
	<!-- 사용자 전체 조회 (엑셀다운로드) selectListAll -->
	<select id="selectListAll" parameterType="map" resultType="map">
		/* 사용자 전체 조회 (엑셀다운로드) selectListAll */
		select 
			user_id
			,'' as user_pass
			,user_name
			,local_no
			,channel_no
			,use_yn
			,system_code
			,coalesce((select system_name from tbl_system
						where system_code = tbl_user.system_code), '') as system_name
			,user_level
			,user_level as origin_level
			,fn_GetCodeName('USER_LEVEL', user_level) as user_level_desc
			,pass_chg_term
			,(case pass_chg_term when 0 then '제한없음' 
				else pass_chg_term::varchar || '일' end) as pass_chg_term_desc
			,pass_expire_date
			,pass_upd_date
			,coalesce(user_ip, '') as user_ip
			,lock_yn
			,to_char(lock_datm, 'YYYY-MM-DD HH24:MI:SS') as lock_datm
			,resign_yn
			,(case resign_yn when '1' then '퇴사' 
				else '재직' end) as resign_yn_desc
			,to_char(resign_datm, 'YYYY-MM-DD HH24:MI:SS') as resign_datm
			,to_char(regi_datm, 'YYYY-MM-DD HH24:MI:SS') as regi_datm
		from tbl_user
		where 1=1
		<if test='business_code!=null and business_code!=""'>
		and business_code = #{business_code}
		</if>
		<if test='bpart_code!=null and bpart_code!=""'>
		and bpart_code = #{bpart_code}
		</if>
		<if test='mpart_code!=null and mpart_code!=""'>
		and mpart_code = #{mpart_code}
		</if>
		<if test='spart_code!=null and spart_code!=""'>
		and spart_code = #{spart_code}
		</if>
		<if test='user_id!=null and user_id!=""'>
		and user_id like #{user_id} || '%'
		</if>
		<if test='user_name!=null and user_name!=""'>
		and user_name like #{user_name} || '%'
		</if>
		<if test='local_no!=null and local_no!=""'>
		and local_no like #{local_no} || '%'
		</if>
		order by ${sort_idx} ${sort_dir}
	</select>

	<!-- 단일 평가자 조회 selectEvalItem -->
	<select id="selectEvalItem" parameterType="string" resultType="map">
		/* 단일 평가자 조회 selectEvalItem */
		select 
			user_id
			,'' as user_pass
			,user_name
			,use_yn
			,(select business_name from tbl_business 
				where business_code = tbl_user.business_code) as business_name
			,user_level
			,fn_GetCodeName('USER_LEVEL', user_level) as user_level_desc
			,pass_chg_term
			,(case pass_chg_term when 0 then '제한없음' 
				else pass_chg_term::varchar || '일' end) as pass_chg_term_desc
			,pass_expire_date
			,pass_upd_date
			,lock_yn
			,to_char(lock_datm, 'YYYY-MM-DD HH24:MI:SS') as lock_datm
			,resign_yn
			,(case resign_yn when '1' then '퇴사' 
				else '재직' end) as resign_yn_desc
			,to_char(resign_datm, 'YYYY-MM-DD HH24:MI:SS') as resign_datm
			,to_char(regi_datm, 'YYYY-MM-DD HH24:MI:SS') as regi_datm
		from tbl_user
		where user_id = #{user_id}
	</select>

	<!-- 평가자 count selectEvalCount -->
	<select id="selectEvalCount" parameterType="map" resultType="map">
		/* 평가자 count selectEvalCount */
		select 	
			count(*)::int as tot_cnt
			,ceil(count(*) / ${top_cnt}::float) as page_cnt
		from tbl_user
		where eval_yn = 'y'
		<if test='regi_date1!=null and regi_date1!="" and regi_date2!=null and regi_date2!=""'>
		and regi_datm between (#{regi_date1} || ' 00:00:00.000')::timestamp and (#{regi_date2} || ' 23:59:59.997')::timestamp
		</if>
		<if test='business_code!=null and business_code!=""'>
		and business_code=#{business_code}
		</if>
		<if test='user_id!=null and user_id!=""'>
		and user_id like #{user_id} || '%'
		</if>
		<if test='user_name!=null and user_name!=""'>
		and user_name like #{user_name} || '%'
		</if>
	</select>

	<!-- 평가자 조회 selectEvalList -->
	<select id="selectEvalList" parameterType="map" resultType="map">
		/* 평가자 조회 selectEvalList */
		select 
			(${tot_cnt}-rownum+1) idx
			,U.*
			,(select business_name from tbl_business 
				where business_code=U.business_code) as business_name
			,(select part_name from tbl_user_group 
				where part_depth=1 
				and bpart_code = U.bpart_code) as bpart_name
			,(select part_name from tbl_user_group 
				where part_depth = 2 
				and bpart_code = U.bpart_code 
				and mpart_code = U.mpart_code) as mpart_name
			,(select part_name from tbl_user_group 
				where part_depth = 3 
				and bpart_code = U.bpart_code 
				and mpart_code = U.mpart_code 
				and spart_code = U.spart_code) as spart_name
		from (
			select
				ROW_NUMBER() OVER(order by ${sort_idx} ${sort_dir}) as rownum
				,user_id
				,'' as user_pass
				,user_name
				,use_yn
				,business_code
				,bpart_code
				,mpart_code
				,spart_code
				,user_level
				,fn_GetCodeName('USER_LEVEL', user_level) as user_level_desc
				,pass_chg_term
				,(case pass_chg_term when 0 then '제한없음' 
					else pass_chg_term::varchar || '일' end) as pass_chg_term_desc
				,pass_expire_date
				,pass_upd_date
				,lock_yn
				,to_char(lock_datm, 'YYYY-MM-DD HH24:MI:SS') as lock_datm
				,resign_yn
				,(case resign_yn when '1' then '퇴사' 
					else '재직' end) as resign_yn_desc
				,to_char(resign_datm, 'YYYY-MM-DD HH24:MI:SS') as resign_datm
				,to_char(regi_datm, 'YYYY-MM-DD HH24:MI:SS') as regi_datm
			from tbl_user
			where eval_yn = 'y'
			<if test='regi_date1!=null and regi_date1!="" and regi_date2!=null and regi_date2!=""'>
			and regi_datm between (#{regi_date1} || ' 00:00:00.000')::timestamp and (#{regi_date2} || ' 23:59:59.997')::timestamp
			</if>
			<if test='business_code!=null and business_code!=""'>
			and business_code = #{business_code}
			</if>
			<if test='user_id!=null and user_id!=""'>
			and user_id like #{user_id} || '%'
			</if>
			<if test='user_name!=null and user_name!=""'>
			and user_name like #{user_name} || '%'
			</if>
			order by ${sort_idx} ${sort_dir}
			limit ${top_cnt} offset (${start_cnt}-1)
		) U
	</select>

	<!-- 평가자 전체 조회 (엑셀다운로드) selectEvalListAll -->
	<select id="selectEvalListAll" parameterType="map" resultType="map">
		/* 평가자 전체 조회 (엑셀다운로드) selectEvalListAll */
		select 
			user_id
			,'' as user_pass
			,user_name
			,use_yn
			,(select business_name from tbl_business 
				where business_code = tbl_user.business_code) as business_name
			,user_level
			,fn_GetCodeName('USER_LEVEL', user_level) as user_level_desc
			,pass_chg_term
			,(case pass_chg_term when 0 then '제한없음' 
				else pass_chg_term::varchar || '일' end) as pass_chg_term_desc
			,pass_expire_date
			,pass_upd_date
			,lock_yn
			,to_char(lock_datm, 'YYYY-MM-DD HH24:MI:SS') as lock_datm
			,resign_yn
			,(case resign_yn when '1' then '퇴사' 
				else '재직' end) as resign_yn_desc
			,to_char(resign_datm, 'YYYY-MM-DD HH24:MI:SS') as resign_datm
			,to_char(regi_datm, 'YYYY-MM-DD HH24:MI:SS') as regi_datm
		from tbl_user
		where eval_yn = 'y'
		<if test='regi_date1!=null and regi_date1!="" and regi_date2!=null and regi_date2!=""'>
		and regi_datm between (#{regi_date1} || ' 00:00:00.000')::timestamp and (#{regi_date2} || ' 23:59:59.997')::timestamp
		</if>
		<if test='business_code!=null and business_code!=""'>
		and business_code = #{business_code}
		</if>
		<if test='user_id!=null and user_id!=""'>
		and user_id like #{user_id} || '%'
		</if>
		<if test='user_name!=null and user_name!=""'>
		and user_name like #{user_name} || '%'
		</if>
		order by ${sort_idx} ${sort_dir}
	</select>
	
	<!-- 사용자 ID 중복 체크 userIdChk -->
	<select id="userIdChk" parameterType="map" resultType="int">
		/* 사용자 ID 중복 체크 userIdChk */
		select count(user_id)::int as cnt 
		from tbl_user
		where user_id = #{user_id}
	</select>

<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: INSERT :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

	<!-- 사용자 등록(tbl) insertUser -->
	<insert id="insertUser" parameterType="map">
		/* 사용자 등록(tbl) insertUser */
		insert into tbl_user (
			user_id,user_pass,user_name
			,business_code,bpart_code,mpart_code,spart_code
			,user_level,local_no,system_code
			,channel_no
			,pass_chg_term
			,pass_expire_date
			,pass_upd_date
			,user_ip
			,lock_yn,resign_yn,use_yn
			,regi_datm,regi_ip,regi_id,eval_yn
			,rec_down_yn
		)
		select 
			#{user_id},#{user_pass},#{user_name}
			,#{business_code},#{bpart_code},#{mpart_code},#{spart_code}
			,#{user_level},#{local_no},#{system_code}
			,case #{rec_div} when 'T' then #{channel_no}
				else coalesce((select channel from crec_ip_info
							where phone_num = #{local_no}
							and system_code = #{system_code}
							limit 1), '') end
			,#{pass_chg_term}::int
			,case #{pass_chg_term} when '0' then '9999-12-31' 
				else to_char(current_timestamp(3) + (${pass_chg_term}::int * interval '1 day'), 'YYYY-MM-DD') end
			,null
			,#{user_ip}
			,'0','0','1'
			,current_timestamp(3),#{regi_ip},#{regi_id},#{eval_yn}
			,#{rec_down_yn}
	</insert>

	<!-- 사용자 등록(crec) insertCrecUser -->
	<insert id="insertCrecUser" parameterType="map">
		/* 사용자 등록(crec) insertCrecUser */
		insert into crec_user_info (
			user_id,user_name,user_pass
			,bpart_code,mpart_code,spart_code
			,channel_local,channel_real
			,channel_no
			,user_rec,user_cti,system_code
			,user_level,visible_ok
			,user_ip
		)
		select #{user_id},#{user_name},''
			,#{bpart_code},#{mpart_code},#{spart_code}
			,#{local_no},#{local_no}
			,case #{rec_div} when 'T' then #{channel_no}
				else coalesce((select channel from crec_ip_info
							where phone_num = #{local_no}
							and system_code = #{system_code}
							limit 1), '') end
			,'Y','Y',#{system_code}
			,#{user_level},'Y'
			,#{user_ip}
	</insert>

	<!-- 평가자 등록 insertEvalUser -->
	<insert id="insertEvalUser" parameterType="map">
		/* 평가자 등록 insertEvalUser */
		insert into tbl_user (
			user_id,user_pass,user_name
			,business_code,user_level
			,pass_chg_term
			,pass_expire_date
			,pass_upd_date
			,lock_yn,resign_yn,use_yn
			,regi_datm,regi_ip,regi_id
		)
		select #{user_id},#{user_pass},#{user_name}
			,#{business_code},#{user_level}
			,#{pass_chg_term}
			,case #{pass_chg_term} when '0' then '9999-12-31' else to_char(current_timestamp(3) + (${pass_chg_term}::int * interval '1 day'), 'YYYY-MM-DD') end
			,to_char(current_timestamp(3), 'YYYY-MM-DD')
			,'0','0','1'
			,current_timestamp(3),#{regi_ip},#{regi_id}
	</insert>

<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: UPDATE :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

	<!-- 사용자 업데이트(tbl) updateUser -->
	<update id="updateUser" parameterType="map">
		/* 사용자 업데이트(tbl) updateUser */
		update tbl_user
		<set>
			<if test='user_pass!=null and user_pass!=""'>user_pass = #{user_pass}, pass_upd_date= to_char(resign_datm, 'YYYY-MM-DD'),</if>
			<if test='user_name!=null and user_name!=""'>user_name = #{user_name},</if>
			<if test='user_level!=null and user_level!=""'>user_level = #{user_level},</if>
			<if test='local_no!=null and local_no!=""'>local_no = #{local_no},</if>
			<if test='rec_div!=null and rec_div!=""'>
				<choose>
					<when test='rec_div=="T"'>channel_no = #{channel_no},</when>
					<otherwise>channel_no = coalesce((select channel from crec_ip_info
													where phone_num = #{local_no}
													and system_code = #{system_code}
													limit 1), ''),
					</otherwise>
				</choose>
			</if>
			<if test='system_code!=null and system_code!=""'>system_code = #{system_code},</if>
			<if test='pass_chg_term!=null and pass_chg_term!=""'>pass_chg_term = #{pass_chg_term}::int,</if>
			<if test='bpart_code!=null and bpart_code!=""'>bpart_code = #{bpart_code},</if>
			<if test='mpart_code!=null and mpart_code!=""'>mpart_code = #{mpart_code},</if>
			<if test='spart_code!=null and spart_code!=""'>spart_code = #{spart_code},</if>
			<if test='user_pass!=null and user_pass!=""'>
				<choose>
					<when test='pass_chg_term!=null and pass_chg_term!="" and pass_chg_term=="0"'>pass_expire_date = '9999-12-31',</when>
					<when test='pass_chg_term!=null and pass_chg_term!="" and pass_chg_term!="0"'>
						<choose>
							<when test='pass_upd_date!=null and pass_upd_date!=""'>pass_expire_date = to_char(pass_upd_date::date + (${pass_chg_term}::int * interval '1 day'), 'YYYY-MM-DD'),</when>
							<otherwise>pass_expire_date = to_char(current_timestamp(3) + (${pass_chg_term}::int * interval '1 day'), 'YYYY-MM-DD'),</otherwise>
						</choose>
					</when>
				</choose>
			</if>
			<if test='resign_yn!=null and resign_yn!=""'>resign_yn = #{resign_yn},</if>
			<if test='resign_yn!=null and resign_yn!=""'>
				<choose>
					<when test='resign_yn=="1"'>resign_datm = current_timestamp(3),</when>
					<when test='resign_yn=="0"'>resign_datm = null,</when>
				</choose>
			</if>
			<if test='lock_yn!=null and lock_yn!=""'>lock_yn = #{lock_yn},</if>
			<if test='lock_yn!=null and lock_yn!=""'>
				<choose>
					<when test='lock_yn=="1"'>lock_datm = current_timestamp(3),</when>
					<when test='lock_yn=="0"'>lock_datm = null, login_chk_datm = null,</when>
				</choose>
			</if>
			<if test='login_yn!=null and login_yn!=""'>
				<choose>
					<when test='login_yn=="1"'>login_datm = current_timestamp(3), login_ip = #{login_ip}, login_chk_datm = current_timestamp(3),</when>
					<when test='login_yn=="0"'></when>
				</choose>
			</if>
			<if test='use_yn!=null and use_yn!=""'>use_yn = #{use_yn},</if>
			<if test='eval_yn!=null and eval_yn!=""'>eval_yn = #{eval_yn},</if>
			<if test='rec_down_yn!=null and rec_down_yn!=""'>rec_down_yn = #{rec_down_yn},</if>
			user_ip = #{user_ip},
			upd_datm = current_timestamp(3),
			upd_ip = #{upd_ip},
			upd_id = #{upd_id}
		</set>
		where user_id = #{user_id}
	</update>

	<!-- 사용자 업데이트(crec) updateCrecUser -->
	<update id="updateCrecUser" parameterType="map">
		/* 사용자 업데이트(crec) updateCrecUser */
		update crec_user_info
		<set>
			<if test='user_name!=null and user_name!=""'>user_name = #{user_name},</if>
			<if test='local_no!=null and local_no!=""'>channel_local = #{local_no}, channel_real = #{local_no},</if>
			<if test='rec_div!=null and rec_div!=""'>
				<choose>
					<when test='rec_div=="T"'>channel_no = #{channel_no},</when>
					<otherwise>channel_no = coalesce((select channel from crec_ip_info
														where phone_num = #{local_no}
														and system_code = #{system_code}
														limit 1), ''),
					</otherwise>
				</choose>
			</if>
			<if test='system_code!=null and system_code!=""'>system_code = #{system_code},</if>
			<if test='user_level!=null and user_level!=""'>user_level = #{user_level},</if>
			<if test='bpart_code!=null and bpart_code!=""'>bpart_code = #{bpart_code},</if>
			<if test='mpart_code!=null and mpart_code!=""'>mpart_code = #{mpart_code},</if>
			<if test='spart_code!=null and spart_code!=""'>spart_code = #{spart_code},</if>
			user_ip = #{user_ip}
		</set>
		where user_id = #{user_id}
	</update>

	<!-- 평가자 업데이트 updateEvalUser -->
	<update id="updateEvalUser" parameterType="map">
		/* 평가자 업데이트 updateEvalUser */
		update tbl_user
		<set>
			<if test='user_pass!=null and user_pass!=""'>user_pass = #{user_pass}, pass_upd_date = to_char(resign_datm, 'YYYY-MM-DD'),</if>
			<if test='user_name!=null and user_name!=""'>user_name = #{user_name},</if>
			<if test='user_level!=null and user_level!=""'>user_level = #{user_level},</if>
			<if test='pass_chg_term!=null and pass_chg_term!=""'>pass_chg_term = #{pass_chg_term}::int,</if>
			<choose>
				<when test='pass_chg_term!=null and pass_chg_term!="" and pass_chg_term=="0"'>pass_expire_date = '9999-12-31',</when>
				<when test='pass_chg_term!=null and pass_chg_term!="" and pass_chg_term!="0"'>
					<choose>
						<when test='user_pass!=null and user_pass!=""'>pass_expire_date = to_char(current_timestamp(3) + (${pass_chg_term}::int * interval '1 day'), 'YYYY-MM-DD'),</when>
						<otherwise>pass_expire_date = to_char(pass_upd_date::date + (${pass_chg_term}::int * interval '1 day'), 'YYYY-MM-DD'),</otherwise>
					</choose>
				</when>
			</choose>
			<if test='resign_yn!=null and resign_yn!=""'>resign_yn = #{resign_yn},</if>
			<if test='resign_yn!=null and resign_yn!=""'>
				<choose>
					<when test='resign_yn=="1"'>resign_datm = current_timestamp(3),</when>
					<when test='resign_yn=="0"'>resign_datm = null,</when>
				</choose>
			</if>
			<if test='lock_yn!=null and lock_yn!=""'>lock_yn = #{lock_yn},</if>
			<if test='lock_yn!=null and lock_yn!=""'>
				<choose>
					<when test='lock_yn=="1"'>lock_datm = current_timestamp(3),</when>
					<when test='lock_yn=="0"'>lock_datm = null,</when>
				</choose>
			</if>
			<if test='use_yn!=null and use_yn!=""'>use_yn = #{use_yn},</if>
			upd_datm = current_timestamp(3),
			upd_ip = #{upd_ip},
			upd_id = #{upd_id}
		</set>
		where user_id = #{user_id}
	</update>

	<!-- 비밀번호 변경 업데이트 updatePasswd -->
	<update id="updatePasswd" parameterType="map">
		/* 비밀번호 변경 업데이트 updatePasswd */
		update tbl_user 
			set user_pass = #{user_pass}
				,pass_expire_date = (case when pass_chg_term = 0 then '9999-12-31' else to_char(current_timestamp(3) + (pass_chg_term * interval '1 day'), 'YYYY-MM-DD') end)
				,pass_upd_date = to_char(current_timestamp(3), 'YYYY-MM-DD') 
		where user_id = #{user_id}
	</update>

<!-- :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::: DELETE :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::  -->

	<!-- 사용자 삭제(tbl) deleteUser -->
	<delete id="deleteUser" parameterType="string">
		/* 사용자 삭제(tbl) deleteUser */
		delete from tbl_user 
		where user_id = #{user_id}
	</delete>
	
	<!-- 사용자 삭제(crec) deleteCrecUser -->
	<delete id="deleteCrecUser" parameterType="string">
		/* 사용자 삭제(crec) deleteCrecUser */
		delete from crec_user_info 
		where user_id = #{user_id}
	</delete>

	<!-- 잠금해제 (login result reset) unlockLoginResult -->
	<delete id="unlockLoginResult" parameterType="string">
		/*  잠금해제 unlockLoginResult */
		delete from tbl_login_result 
		where login_id = #{user_id}
		and login_date = (select to_char(lock_datm, 'YYYY-MM-DD') from tbl_user 
							where user_id = #{user_id})
	</delete>

</mapper>