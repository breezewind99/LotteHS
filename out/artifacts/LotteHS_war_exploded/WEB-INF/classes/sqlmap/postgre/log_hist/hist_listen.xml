<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hist_listen">

	<!-- 청취 이력 count selectCount -->
	<select id="selectCount" parameterType="map" resultType="map">
		/* 청취 이력 count selectCount */
		select 
			count(*)::int as tot_cnt
			,ceil(count(*) / ${top_cnt}::float) as page_cnt
		from tbl_listen_hist
		where listen_datm between (#{listen_date1} || ' 00:00:00.000')::timestamp and (#{listen_date2} || ' 23:59:59.997')::timestamp
		<if test='listen_id!=null and listen_id!=""'>
		and listen_id like #{listen_id} || '%'
		</if>
		<if test='listen_name!=null and listen_name!=""'>
		and listen_name like #{listen_name} || '%'
		</if>
		<if test='rec_date1!=null and rec_date1!="" and rec_date2!=null and rec_date2!=""'>
		and rec_datm between (#{rec_date1} || ' 00:00:00.000')::timestamp and (#{rec_date2} || ' 23:59:59.997')::timestamp
		</if>
		<if test='user_id!=null and user_id!=""'>
		and user_id like #{user_id} || '%'
		</if>
		<if test='user_name!=null and user_name!=""'>
		and user_name like #{user_name} || '%'
		</if>
		<if test='reason_code!=null and reason_code!=""'>
		and reason_code like #{reason_code} || '%'
		</if>
	</select>
	
	<!-- 청취 이력 조회 selectList -->
	<select id="selectList" parameterType="map" resultType="map">
		/* 청취 이력 조회 selectList */
		select 
			(${tot_cnt} - rownum + 1) as idx
			,*
		from (
			select
				ROW_NUMBER() OVER(order by A.${sort_idx} ${sort_dir}) as rownum
				,to_char(A.listen_datm, 'YYYY-MM-DD HH24:MI:SS') as listen_datm
				,A.listen_id
				,A.listen_name
				,A.listen_ip
				,to_char(A.rec_datm, 'YYYY-MM-DD HH24:MI:SS') as rec_datm
				,A.rec_keycode
				,A.rec_filename
				,A.user_id
				,A.user_name
				,A.local_no
				,'link' as v_url
				,coalesce(A.reason_code, '') as reason_code
				,coalesce(A.reason_text, '') as reason_text
				,(case when coalesce(A.reason_code, '') != '' then fn_GetCodeName('LD_REASON', A.reason_code) 
					else '' end) as reason_code_desc
				,(select part_name from tbl_user_group 
					where part_depth = 1 
					and bpart_code = B.bpart_code) as bpart_name
				,(select part_name from tbl_user_group 
					where part_depth = 2 
					and bpart_code = B.bpart_code 
					and mpart_code = B.mpart_code) as mpart_name
				,(select part_name from tbl_user_group 
					where part_depth = 3 
					and bpart_code = B.bpart_code 
					and mpart_code = B.mpart_code 
					and spart_code = B.spart_code) as spart_name
			from tbl_listen_hist A
			left join tbl_user B on A.listen_id = B.user_id
			where A.listen_datm between (#{listen_date1} || ' 00:00:00.000')::timestamp and (#{listen_date2} || ' 23:59:59.997')::timestamp
			<if test='listen_id!=null and listen_id!=""'>
			and A.listen_id like #{listen_id} || '%'
			</if>
			<if test='listen_name!=null and listen_name!=""'>
			and A.listen_name like #{listen_name} || '%'
			</if>
			<if test='rec_date1!=null and rec_date1!="" and rec_date2!=null and rec_date2!=""'>
			and A.rec_datm between (#{rec_date1} || ' 00:00:00.000')::timestamp and (#{rec_date2} || ' 23:59:59.997')::timestamp
			</if>
			<if test='user_id!=null and user_id!=""'>
			and A.user_id like #{user_id} || '%'
			</if>
			<if test='user_name!=null and user_name!=""'>
			and A.user_name like #{user_name} || '%'
			</if>
			<if test='reason_code!=null and reason_code!=""'>
			and A.reason_code like #{reason_code} || '%'
			</if>
			order by A.${sort_idx} ${sort_dir}
			limit ${top_cnt} offset (${start_cnt}-1)
		) U
	</select>
	
	<!-- 청취 이력 전체 조회 (엑셀다운로드) selectListAll -->
	<select id="selectListAll" parameterType="map" resultType="map">
		/* 청취 이력 전체 조회 (엑셀다운로드) selectListAll */
		select 
			to_char(A.listen_datm, 'YYYY-MM-DD HH24:MI:SS') listen_datm
			,A.listen_id
			,A.listen_name
			,A.listen_ip
			,to_char(A.rec_datm, 'YYYY-MM-DD HH24:MI:SS') rec_datm
			,A.rec_keycode
			,A.rec_filename
			,A.user_id
			,A.user_name
			,A.local_no
			,coalesce(A.reason_code,'') as reason_code
			,coalesce(A.reason_text,'') as reason_text
			,(case when coalesce(A.reason_code, '') != '' then fn_GetCodeName('LD_REASON', A.reason_code) 
				else '' end) as reason_code_desc
			,(select part_name from tbl_user_group 
				where part_depth = 1 
				and bpart_code = B.bpart_code) as bpart_name
			,(select part_name from tbl_user_group 
				where part_depth = 2 
				and bpart_code = B.bpart_code 
				and mpart_code = B.mpart_code) as mpart_name
			,(select part_name from tbl_user_group 
				where part_depth = 3 
				and bpart_code = B.bpart_code 
				and mpart_code = B.mpart_code 
				and spart_code = B.spart_code) as spart_name
		from tbl_listen_hist A
		left join tbl_user B on A.listen_id = B.user_id
		where A.listen_datm between (#{listen_date1} || ' 00:00:00.000')::timestamp and (#{listen_date2} || ' 23:59:59.997')::timestamp
		<if test='listen_id!=null and listen_id!=""'>
		and A.listen_id like #{listen_id} || '%'
		</if>
		<if test='listen_name!=null and listen_name!=""'>
		and A.listen_name like #{listen_name} || '%'
		</if>
		<if test='rec_date1!=null and rec_date1!="" and rec_date2!=null and rec_date2!=""'>
		and A.rec_datm between (#{rec_date1} || ' 00:00:00.000')::timestamp and (#{rec_date2} || ' 23:59:59.997')::timestamp
		</if>
		<if test='user_id!=null and user_id!=""'>
		and A.user_id like #{user_id} || '%'
		</if>
		<if test='user_name!=null and user_name!=""'>
		and A.user_name like #{user_name} || '%'
		</if>
		<if test='reason_code!=null and reason_code!=""'>
		and A.reason_code like #{reason_code} || '%'
		</if>
		order by ${sort_idx} ${sort_dir}
	</select>
	
	<!-- 청취 이력 저장 insertListenHist -->
	<insert id="insertListenHist" parameterType="map">
		/* 청취 이력 저장 insertListenHist */
		insert into tbl_listen_hist (
			listen_datm, listen_id, listen_name, listen_ip, rec_datm, rec_keycode
			,rec_filename, user_id, user_name, local_no, reason_code, reason_text, listen_src
		) values (
			current_timestamp(3)::timestamp, #{login_id}, #{login_name}, #{listen_ip}, #{rec_datm}::timestamp, #{rec_keycode}
			,#{rec_filename}, #{user_id}, #{user_name}, #{local_no}, #{reason_code}, #{reason_text}, #{listen_src}
		)
	</insert>
</mapper>