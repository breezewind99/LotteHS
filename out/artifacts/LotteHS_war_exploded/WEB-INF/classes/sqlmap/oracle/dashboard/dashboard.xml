<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dashboard">

	<!-- 관제 서버목록 조회 selectMonSystem  -->
	<select id="selectMonSystem" parameterType="map" resultType="map">
		/* 관제 서버목록 조회 selectMonSystem */
		select 
			*
			,(case mon_flag when '001' then 'critical' 
							when '002' then 'warning' 
				else 'normal' end) as flag_desc
		from (
			select 
				B.mon_system
				,(case when char_length(B.mon_system) > 2
						then (
							case when right(B.mon_system,1) = '1'
								then A.system_name || '_bak'
								else A.system_name
							end
						)
						else A.system_name
					end) as mon_name
				,B.mon_date
				,B.mon_time
				,B.mon_cpu
				,B.mon_mem
				,B.mon_hdd
				,B.mon_process
				,nvl(B.mon_rec, '000') as mon_rec
				,nvl(B.mon_check, '000') as mon_check
				,(case when B.mon_date is not null and B.mon_time is not null
					then cast((B.mon_date || ' ' || left(B.mon_time, 2) || ':' || substr(B.mon_time, 3, 2) || ':' || right(B.mon_time, 2)) as timestamp)
					else '1900-01-01 00:00:00.000'
				  end) as mon_datetime
				,(case when strpos(',' || B.mon_rec, ',2') > 0 then '001'
					when strpos(',' || B.mon_check, ',3') > 0 then '002'
					else '000'
				  end) as mon_flag
  				,((date_part('day', current_timestamp(0)::timestamp - (B.mon_date||' '||B.mon_time)::timestamp) * 24 + 
                	date_part('hour', current_timestamp(0)::timestamp - (B.mon_date||' '||B.mon_time)::timestamp)) * 60 +
                	date_part('minute', current_timestamp(0)::timestamp - (B.mon_date||' '||B.mon_time)::timestamp)) * 60 +
                	date_part('second', current_timestamp(0)::timestamp - (B.mon_date||' '||B.mon_time)::timestamp) as mon_delay
			from tbl_system A 
			inner join tbl_dash_monitoring B on A.system_code = left(B.mon_system, 2)
			where 1=1
			<if test='mon_system!=null and mon_system!=""'>
				and A.system_code = #{mon_system}
			</if>			
		) U
		order by mon_system asc
	</select>
	
	<!-- 실시간 모니터링 selectMonitoring -->
	<select id="selectMonitoring" parameterType="map" resultType="map">
		/* 실시간 모니터링 selectMonitoring */
		select 
			U.mon_system
			,U.mon_name
			,U.mon_date
			,U.mon_time
			,U.mon_cpu
			,U.mon_mem
			,U.mon_hdd
			,U.mon_process
			,U.mon_flag
			,(case C.code_flag when '001' then 'critical' 
							   when '002' then 'warning' 
				else '' end) as flag_desc
			, (nvl(C.code_descript, '') ||
			<![CDATA[
				(case when U.flag_detail<>'' then ' (' || U.flag_detail || ')'
					 else ''
				end)) as mon_alram
			]]>
		from (	
			select 
				*
				,nvl(
					case when D.mon_flag in ('202','203','204','205') then (select mon_local_phone 
																			from tbl_dash_monlist 
																			where mon_date = D.mon_date 
																			and mon_time = D.mon_rec_time 
																			and mon_alram = D.mon_flag)
						 when D.mon_flag = '208' then (select mon_ip || ', ' || mon_local_phone 
						 								from tbl_dash_monlist 
						 								where mon_date = D.mon_date 
						 								and mon_time = D.mon_rec_time 
						 								and mon_alram = D.mon_flag)
						 when D.mon_flag='301' then (select string_agg(spt_val,',') 
						 								from regexp_split_to_table(D.mon_process, E',') as spt_val where left(spt_val,1)='X')
						 else ''
					end,'') as flag_detail
			from (	
				select 
					A.*
					,B.*
				from (
					select 
						M.mon_system
						,M.mon_date
						,M.mon_time
						,M.mon_rec_time
						,M.mon_rec
						,M.mon_check
						,nvl(M.mon_cpu, '0') as mon_cpu
						,nvl(M.mon_mem, '0') as mon_mem
						,nvl(M.mon_hdd, '') as mon_hdd
						,nvl(M.mon_process, '') as mon_process
						,(nvl(M.mon_rec, '') || ',' || nvl(M.mon_check, '')) as mon_flags
						,(case when char_length(M.mon_system) > 2
							then (
								case when right(M.mon_system,1) = '1'
									then S.system_name || '_bak'
									else S.system_name
								end
							)
							else S.system_name
						  end) mon_name
					from tbl_dash_monitoring M  
					inner join tbl_system S on left(M.mon_system, 2) = S.system_code
					where M.mon_date = to_char(current_timestamp(3), 'yyyymmdd')
				) A CROSS JOIN LATERAL (
					select mon_flag from regexp_split_to_table(A.mon_rec || ',' || A.mon_check, E',') mon_flag
				) B
			) D
		) U left join tbl_dash_code C on U.mon_flag = C.code 
										and C.code_kind = 'Mon'
		where 1=1
		<![CDATA[
			and U.mon_flag <> '000'
		]]>
		order by U.mon_date desc, U.mon_time desc, U.mon_flag asc
	</select>	
	
	<!-- 모니터링 로그 count selectLogCount -->
	<select id="selectLogCount" parameterType="map" resultType="map">
		/* 모니터링 로그 count selectLogCount */
		select 
			count(*)::int as tot_cnt
			,ceil(count(*) / ${top_cnt}::float) as page_cnt
		from tbl_dash_monlist A 
		inner join tbl_system B on left(A.mon_system, 2) = B.system_code
		inner join tbl_dash_code C on A.mon_alram = C.code 
									and C.code_kind = 'Mon'
		where A.mon_date between #{log_date1} and #{log_date2}
		<if test='mon_system!=null and mon_system!=""'>
			and A.mon_system=#{mon_system}
		</if>			
		<if test='mon_alram!=null and mon_alram!=""'>
			and A.mon_alram=#{mon_alram}
		</if>	
	</select>
	
	<!-- 모니터링 로그 조회 selectLogList -->
	<select id="selectLogList" parameterType="map" resultType="map">
		/* 모니터링 로그 조회 selectLogList */
		select 
			(${tot_cnt}-rownum+1) as idx
			,*
		from (
			select
				ROW_NUMBER() OVER(order by A.mon_date desc, A.mon_time desc, A.mon_alram asc) as rownum
				,A.mon_system
				,A.mon_date
				,A.mon_time
				,A.mon_alram as mon_flag
				, (case when char_length(A.mon_system) > 2
					then (
						case when right(A.mon_system,1) = '1'
							then B.system_name || '_bak'
							else B.system_name
						end
					)
					else B.system_name
				  end) as mon_name
				,(case C.code_flag when '001' then 'critical' 
									when '002' then 'warning' 
					else '' end) as flag_desc
				, (nvl(C.code_descript, '') ||
					(case when A.mon_alram in ('202', '203', '204', '205') then ' (' || A.mon_local_phone || ')'
						  when A.mon_alram = '208' then ' (' || A.mon_local_phone || ', ' || A.mon_ip || ')'
						  when A.mon_alram = '301' then ' (' || (select string_agg(spt_val,',') 
						 										from regexp_split_to_table(A.mon_process, E',') as spt_val where left(spt_val,1)='X') || ')'
						else ''
					end)) as mon_alram
			from tbl_dash_monlist A 
			inner join tbl_system B on left(A.mon_system,2) = B.system_code
			inner join tbl_dash_code C on A.mon_alram = C.code 
										and C.code_kind = 'Mon'
			where A.mon_date between #{log_date1} and #{log_date2}
			<if test='mon_system!=null and mon_system!=""'>
				and A.mon_system = #{mon_system}
			</if>			
			<if test='mon_alram!=null and mon_alram!=""'>
				and A.mon_alram = #{mon_alram}
			</if>
			order by A.mon_date desc, A.mon_time desc, A.mon_alram asc
			limit ${top_cnt} offset (${start_cnt}-1)
		) U
	</select>
	
	<!-- 모니터링 로그 전체 조회 (엑셀다운로드) selectLogListAll -->
	<select id="selectLogListAll" parameterType="map" resultType="map">
		/* 모니터링 로그 전체 조회 (엑셀다운로드) selectLogListAll */
		select
			A.mon_system
			,A.mon_date
			,A.mon_time
			,A.mon_alram as mon_flag
			,(case when char_length(A.mon_system) > 2
				then (
					case when right(A.mon_system,1) = '1'
						then B.system_name || '_bak'
						else B.system_name
					end
				)
				else B.system_name
			  end) as mon_name
			,(case C.code_flag when '001' then 'critical' 
								when '002' then 'warning' 
				else '' end) as flag_desc
			,(nvl(C.code_descript,'') ||
				(case when A.mon_alram in ('202','203','204','205') then ' (' || A.mon_local_phone || ')'
					  when A.mon_alram = '208' then ' (' || A.mon_local_phone || ', ' || A.mon_ip || ')'
					  when A.mon_alram = '301' then ' (' || (select string_agg(spt_val,',') 
					 										from regexp_split_to_table(A.mon_process, E',') as spt_val where left(spt_val,1)='X') || ')'
					else ''
				end)) as mon_alram
		from tbl_dash_monlist A 
		inner join tbl_system B on left(A.mon_system,2) = B.system_code
		inner join tbl_dash_code C on A.mon_alram = C.code 
									and C.code_kind = 'Mon'
		where A.mon_date between #{log_date1} and #{log_date2}
		<if test='mon_system!=null and mon_system!=""'>
		and A.mon_system = #{mon_system}
		</if>			
		<if test='mon_alram!=null and mon_alram!=""'>
		and A.mon_alram = #{mon_alram}
		</if>
		order by A.mon_date desc, A.mon_time desc, A.mon_alram asc
		<if test='top_cnt!=null and top_cnt!=""'>
		limit ${top_cnt}
		</if>
	</select>
	
	<!-- 모니터링 코드 목록 조회 selectCodeList -->
	<select id="selectCodeList" parameterType="map" resultType="map">
		/* 모니터링 코드 목록 조회 selectCodeList */
		select 
			code
			,code_descript
			,code_flag
		from tbl_dash_code
		where code_kind = 'Mon'
		order by code asc
	</select>
	
	<!-- 모니터링 채널 상태별 건수 selectRecStateCount -->
	<select id="selectRecStateCount" parameterType="map" resultType="map">
		/* 모니터링 채널 상태별 건수 selectRecStateCount */
		select
			nvl(sum(case when a.ch_state = 'RS' then cnt end),0) as rs_cnt
			,nvl(sum(case when a.ch_state = 'RP' then cnt end),0) as rp_cnt
		  	,nvl(sum(case when a.ch_state = 'OW' then cnt end),0) as ow_cnt
		  	,nvl(sum(case when a.ch_state = 'TP' then cnt end),0) as tp_cnt
		  	,nvl(sum(case when a.ch_state = 'RL' then cnt end),0) as rl_cnt
		  	,nvl(sum(case when a.ch_state = 'RW' then cnt end),0) as rw_cnt
		from (
			select
		    	aa.ch_state
		    	,count(aa.ch_state) as cnt
			from (
				select
			    <![CDATA[
					(case when cm.state = '1' and cm.rec_state = '0' then 'RS'
						  when cm.state = '1' and cm.rec_state = '1' then 'RP'
						  when cm.state = '1' and cm.rec_state = '2' then 'OW'
						  when cm.state = '1' and cm.rec_state = '3' then 'OW'
						  when cm.state = '1' and cm.rec_state = '4' then 'TP'
						  when cm.state = '0' and to_timestamp(cm.datetime, 'yyyy-mm-dd hh24:mi:ss') < (current_timestamp(0)::timestamp - interval '1 day') then 'RL'
						  when cm.state = '0' and to_timestamp(cm.datetime, 'yyyy-mm-dd hh24:mi:ss') > (current_timestamp(0)::timestamp - interval '1 day') then 'RW'
						else  '' end) as ch_state
				]]>
			    from crec_monitoring cm
			    inner join tbl_system ts on cm.system_code = ts.system_code
			) aa
			group by aa.ch_state
		) a
	</select>
	
	<!-- 모니터링 채널 조회 selectChannelList -->
	<select id="selectChannelList" parameterType="map" resultType="map">
		/* 모니터링 채널 조회 selectChannelList */
		select
		  cm.state
		  ,lpad(cm.channel, 5, '00000') as channel
		  ,cm.system_code 
		  ,cm.login 
		  ,cm.user_id 
		  ,cm.user_name 
		  ,cm.ani
		  ,lpad(cm.phone, 4, '0000') as phone
		  ,cm.datetime 
		  ,ts.system_ip
		  ,cm.rec_state
		  <![CDATA[
		  ,(case when cm.state = '1' and cm.rec_state = '0' then 'RS'  --녹음중
		  		 when cm.state = '1' and cm.rec_state = '1' then 'RP'  --RTP누락
		  		 when cm.state = '1' and cm.rec_state = '2' then 'IW'  --onway
		  		 when cm.state = '1' and cm.rec_state = '3' then 'IW'  --onway
		  		 when cm.state = '1' and cm.rec_state = '4' then 'TP'  --전화기 IP 비매칭
		  		 when cm.state = '0' and to_timestamp(cm.datetime, 'yyyy-mm-dd hh24:mi:ss') < (current_timestamp(0)::timestamp - interval '1 day') then 'RL'	--장시간 미녹취
		  		 when cm.state = '0' and to_timestamp(cm.datetime, 'yyyy-mm-dd hh24:mi:ss') > (current_timestamp(0)::timestamp - interval '1 day') then 'RW'	--대기중
				else  '' end) as ch_state
		   ]]>
		from crec_monitoring cm
		inner join tbl_system ts on cm.system_code = ts.system_code
		order by cast(cm.channel as int) asc
	</select>
	
	<!-- 모니터링 reset 업데이트 updateReset -->
	<update id="updateReset" parameterType="map">
		/* 모니터링 reset 업데이트 updateReset */
		update tbl_dash_monitoring 
			set mon_rec_time = null
				,mon_rec = '000'
				,mon_check = '000'
				,mon_flag = '000' 
		where mon_system is not null
	</update>
	
</mapper>